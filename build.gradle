plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '9.0.0-beta15'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://maven.meteordev.org/releases" }
    maven { url "https://maven.meteordev.org" }
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    include implementation("meteordevelopment:discord-ipc:1.1")
    include implementation("meteordevelopment:orbit:0.2.3")
    implementation(shadow("dev.redstones.mediaplayerinfo:media-player-info:0.1.0"))
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (21 >= 10 || JavaVersion.current().isJava10Compatible()) it.options.release.set(21)
}

loom {
    accessWidenerPath = file("src/main/resources/drughack-recode.accesswidener")
}

java {
    def javaVersion = JavaVersion.toVersion(21)
    if (JavaVersion.current() < javaVersion) toolchain.languageVersion = JavaLanguageVersion.of(21)
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

shadowJar {
    exclude("org/objectweb/**")
    configurations = [project.configurations.shadow]
    archiveClassifier.set("dev")
}

remapJar {
    dependsOn(shadowJar)
    inputFile = tasks.shadowJar.archiveFile
}
